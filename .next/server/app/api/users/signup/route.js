(()=>{var e={};e.id=84,e.ids=[84],e.modules={1185:e=>{"use strict";e.exports=require("mongoose")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{"use strict";e.exports=require("crypto")},7147:e=>{"use strict";e.exports=require("fs")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},9385:(e,r,t)=>{"use strict";t.r(r),t.d(r,{originalPathname:()=>E,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>f,serverHooks:()=>v,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{POST:()=>d});var n=t(9303),o=t(8716),a=t(670),i=t(5349),l=t(839),c=t(7070),u=t(2023),p=t.n(u);async function d(e){try{let r=await e.json(),{username:t,email:s,password:n}=r;console.log("reqBody is :",r);let o=await l.Z.findOne({$or:[{username:t},{email:s}]});if(o){if(o.username===t)throw Error("Username already exists. Please choose a different username.");if(o.email===s)throw Error("Email already exists. Please use a different email.")}if(!t||"string"!=typeof t)throw Error("Username is required and must be a string.");if(!s||"string"!=typeof s)throw Error("Email is required and must be a string.");if(!n||"string"!=typeof n||n.length<8)throw Error("Password is required and must be at least 8 characters long.");let a=await p().genSalt(10),i=await p().hash(n,a),u=new l.Z({username:t,email:s,password:i}),d=await u.save();return console.log("saved user is :",d),c.NextResponse.json({message:"User created successfully.",success:!0,savedUser:d})}catch(r){console.error("Error creating user:",r.message);let e="An error occurred during signup. Please try again.";return r.message.includes("Username already exists")?e="Username already exists. Please choose a different username.":r.message.includes("Email already exists")?e="Email already exists. Please use a different email.":r.message.includes("Password is required")?e="Password must be at least 8 characters long.":r.message.includes("Username is required")?e="Username is required.":r.message.includes("Email is required")&&(e="Email is required."),c.NextResponse.json({error:e},{status:400})}}(0,i.$)();let f=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/users/signup/route",pathname:"/api/users/signup",filename:"route",bundlePath:"app/api/users/signup/route"},resolvedPagePath:"C:\\Users\\Abhisek Samal\\Desktop\\Ecoomerce_next\\src\\app\\api\\users\\signup\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:g,staticGenerationAsyncStorage:m,serverHooks:v}=f,E="/api/users/signup/route";function h(){return(0,a.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:m})}},6636:(e,r,t)=>{let s=t(7147),n=t(1017),o=t(2037),a=t(6113),i=t(1564).version,l=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function c(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function u(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function p(e){let r=null;if(e&&e.path&&e.path.length>0){if(Array.isArray(e.path))for(let t of e.path)s.existsSync(t)&&(r=t.endsWith(".vault")?t:`${t}.vault`);else r=e.path.endsWith(".vault")?e.path:`${e.path}.vault`}else r=n.resolve(process.cwd(),".env.vault");return s.existsSync(r)?r:null}function d(e){return"~"===e[0]?n.join(o.homedir(),e.slice(1)):e}let f={configDotenv:function(e){let r;let t=n.resolve(process.cwd(),".env"),o="utf8",a=!!(e&&e.debug);e&&e.encoding?o=e.encoding:a&&c("No encoding is specified. UTF-8 is used by default");let i=[t];if(e&&e.path){if(Array.isArray(e.path))for(let r of(i=[],e.path))i.push(d(r));else i=[d(e.path)]}let l={};for(let t of i)try{let r=f.parse(s.readFileSync(t,{encoding:o}));f.populate(l,r,e)}catch(e){a&&c(`Failed to load ${t} ${e.message}`),r=e}let u=process.env;return(e&&null!=e.processEnv&&(u=e.processEnv),f.populate(u,l,e),r)?{parsed:l,error:r}:{parsed:l}},_configVault:function(e){console.log(`[dotenv@${i}][INFO] Loading env from encrypted .env.vault`);let r=f._parseVault(e),t=process.env;return e&&null!=e.processEnv&&(t=e.processEnv),f.populate(t,r,e),{parsed:r}},_parseVault:function(e){let r;let t=p(e),s=f.configDotenv({path:t});if(!s.parsed){let e=Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}let n=u(e).split(","),o=n.length;for(let e=0;e<o;e++)try{let t=n[e].trim(),o=function(e,r){let t;try{t=new URL(r)}catch(e){if("ERR_INVALID_URL"===e.code){let e=Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}let s=t.password;if(!s){let e=Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}let n=t.searchParams.get("environment");if(!n){let e=Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}let o=`DOTENV_VAULT_${n.toUpperCase()}`,a=e.parsed[o];if(!a){let e=Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:a,key:s}}(s,t);r=f.decrypt(o.ciphertext,o.key);break}catch(r){if(e+1>=o)throw r}return f.parse(r)},config:function(e){if(0===u(e).length)return f.configDotenv(e);let r=p(e);if(!r){var t;return t=`You set DOTENV_KEY but you are missing a .env.vault file at ${r}. Did you forget to build it?`,console.log(`[dotenv@${i}][WARN] ${t}`),f.configDotenv(e)}return f._configVault(e)},decrypt:function(e,r){let t=Buffer.from(r.slice(-64),"hex"),s=Buffer.from(e,"base64"),n=s.subarray(0,12),o=s.subarray(-16);s=s.subarray(12,-16);try{let e=a.createDecipheriv("aes-256-gcm",t,n);return e.setAuthTag(o),`${e.update(s)}${e.final()}`}catch(s){let e=s instanceof RangeError,r="Invalid key length"===s.message,t="Unsupported state or unable to authenticate data"===s.message;if(e||r){let e=Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(t){let e=Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw s}},parse:function(e){let r;let t={},s=e.toString();for(s=s.replace(/\r\n?/mg,"\n");null!=(r=l.exec(s));){let e=r[1],s=r[2]||"",n=(s=s.trim())[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),'"'===n&&(s=(s=s.replace(/\\n/g,"\n")).replace(/\\r/g,"\r")),t[e]=s}return t},populate:function(e,r,t={}){let s=!!(t&&t.debug),n=!!(t&&t.override);if("object"!=typeof r){let e=Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(let t of Object.keys(r))Object.prototype.hasOwnProperty.call(e,t)?(!0===n&&(e[t]=r[t]),s&&(!0===n?c(`"${t}" is already defined and WAS overwritten`):c(`"${t}" is already defined and was NOT overwritten`))):e[t]=r[t]}};e.exports.configDotenv=f.configDotenv,e.exports._configVault=f._configVault,e.exports._parseVault=f._parseVault,e.exports.config=f.config,e.exports.decrypt=f.decrypt,e.exports.parse=f.parse,e.exports.populate=f.populate,e.exports=f},5349:(e,r,t)=>{"use strict";t.d(r,{$:()=>o});var s=t(1185),n=t.n(s);async function o(){try{let e=process.env.MONGO_URI;if(console.log("MongoDB URI:",e),!e)throw Error("MONGO_URI is not defined in the environment variables");await n().connect(e);let r=n().connection;r.on("connected",()=>{console.log("MongoDB connected successfully")}),r.on("error",e=>{console.log(`MongoDB connection error. Please make sure MongoDB is running. ${e}`),process.exit(1)})}catch(e){console.log("Something went wrong"),console.log(e),process.exit(1)}}t(6636).config()},839:(e,r,t)=>{"use strict";t.d(r,{Z:()=>a});var s=t(1185),n=t.n(s);let o=new(n()).Schema({username:{type:String,required:[!0,"Please provide a username"],unique:!0},email:{type:String,required:[!0,"Please provide an email"],unique:!0},password:{type:String,required:[!0,"Please provide a password"]},isVerified:{type:Boolean,default:!1},isAdmin:{type:Boolean,default:!1},forgotPasswordToken:String,forgotPasswordTokenExpiry:Date,verifyToken:String,verifyTokenExpiry:Date}),a=n().models.users||n().model("users",o)},1564:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.4.5","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972,23],()=>t(9385));module.exports=s})();